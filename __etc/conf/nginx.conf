# nginx.conf

user nginx;
worker_processes auto;
pid /run/nginx.pid;
include /usr/share/nginx/modules/*.conf;

events {
  worker_connections 1024;
}

http {

  # Access log format
  log_format main "
    time = \$time_local \
    status = \$status \
    remote_addr = \$remote_addr \
    referer = \$http_referer \
    user_agent = \$http_user_agent \
    x_forwarded_for = \$http_x_forwarded_for \
  ";

  # Access log file
  access_log /var/log/nginx/access.log main;

  # Error log file
  error_log /var/log/nginx/error.log warn;

  tcp_nopush on;
  tcp_nodelay on;
  sendfile on;
  keepalive_timeout 65;
  types_hash_max_size 4096;

  include /etc/nginx/mime.types;
  default_type application/octet-stream;

  ##################################################################################################
  ## www.junghomun.com  ############################################################################
  ##################################################################################################

  ## 80 포트
  server {
    listen 80;
    listen [::]:80;
    server_name junghomun.com www.junghomun.com;
    return 301 https://www.junghomun.com$request_uri;
  }

  ## 443 포트
  server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name junghomun.com www.junghomun.com;

    # 주요 파일 및 디렉터리에 대한 접근 차단
    location ~* /\.(env|git|DS_Store|vscode|telescope|debug|config\.json|server|v2|ecp) {
      deny all;
      access_log off;
      log_not_found off;
    }

    # .php 파일로 들어오는 요청 모두 차단 + eval 함수 차단
    location ~* \.php$ {
      return 404;
    }
    location ~* eval {
      return 404;
    }

    # admob 경로 설정
    location /app-ads.txt {
      alias /var/www/junghomun.com/app-ads.txt;
    }

    # root 경로설정
    location / {
      rewrite ^/$ /JREACT permanent;
    }

    # JREACT 경로 설정
    location /JREACT {
      alias /var/www/junghomun.com/JREACT/client;
      index index.html;
      try_files $uri $uri/ /JREACT/index.html;
    }

    # JPAGE 경로 설정
    location /JPAGE {
      alias /var/www/junghomun.com/JPAGE/client;
      index index.html;
      try_files $uri $uri/ /JPAGE/index.html;
    }

    # JPAGE API 프록시 설정
    location /JPAGE/api {
      proxy_pass http://localhost:4000/JPAGE/api;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;

      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
      proxy_cache_bypass $http_upgrade;

      proxy_read_timeout 60s;
      proxy_send_timeout 60s;
    }

    # SSL 인증서 설정
    ssl_certificate /etc/letsencrypt/live/www.junghomun.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/www.junghomun.com/privkey.pem;
    ssl_trusted_certificate /etc/letsencrypt/live/www.junghomun.com/chain.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

    # HSTS 설정
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

    # 보안 헤더 설정
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;

    # CORS headers 추가
    add_header "Access-Control-Allow-Origin" "*" always;
    add_header "Access-Control-Allow-Methods" "GET, POST, OPTIONS, DELETE, PUT" always;
    add_header "Access-Control-Allow-Headers" "Origin, X-Requested-With, Content-Type, Accept, Authorization" always;

    # 에러 페이지
    error_page 404 /404.html;
    location = /404.html {
      root /usr/share/nginx/html;
    }

    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
      root /usr/share/nginx/html;
    }
  }
}